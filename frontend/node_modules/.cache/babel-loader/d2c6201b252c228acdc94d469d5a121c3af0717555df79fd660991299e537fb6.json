{"ast":null,"code":"var _jsxFileName = \"/Users/shahab/Desktop/Projects/finalticketingapp/frontend/src/pages/TicketPage.js\",\n  _s = $RefreshSig$();\n// src/pages/TicketPage.js\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketPage = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/tickets\");\n        setTickets(response.data);\n      } catch (error) {\n        setError(\"Failed to load tickets\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTickets();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading tickets...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tickets.length > 0 ? tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: ticket.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ticket.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Severity: \", ticket.severity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created at: \", new Date(ticket.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, ticket._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tickets found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketPage, \"8RaUHPAPmOWpaZp4hASiN7Ep6XU=\");\n_c = TicketPage;\nexport default TicketPage;\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst TicketPage = () => {\n  const { id } = useParams();\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        // Fetch tickets for the specific domain\n        const response = await fetch(`/api/tickets/${id}`); // Adjust URL as needed\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setTickets(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTickets();\n  }, [id]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      <h1>Tickets for Domain: {id}</h1>\n      <ul>\n        {tickets.map((ticket) => (\n          <li key={ticket._id}>\n            <h2>{ticket.title}</h2>\n            <p>{ticket.description}</p>\n            <p>Severity: {ticket.severity}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TicketPage;\n*/\nvar _c;\n$RefreshReg$(_c, \"TicketPage\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","TicketPage","_s","tickets","setTickets","loading","setLoading","error","setError","fetchTickets","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ticket","title","description","severity","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["/Users/shahab/Desktop/Projects/finalticketingapp/frontend/src/pages/TicketPage.js"],"sourcesContent":["// src/pages/TicketPage.js\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst TicketPage = () => {\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/tickets\");\n        setTickets(response.data);\n      } catch (error) {\n        setError(\"Failed to load tickets\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTickets();\n  }, []);\n\n  if (loading) return <p>Loading tickets...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <h1>All Tickets</h1>\n      <ul>\n        {tickets.length > 0 ? (\n          tickets.map((ticket) => (\n            <li key={ticket._id}>\n              <h2>{ticket.title}</h2>\n              <p>{ticket.description}</p>\n              <p>Severity: {ticket.severity}</p>\n              <p>Created at: {new Date(ticket.createdAt).toLocaleString()}</p>\n            </li>\n          ))\n        ) : (\n          <p>No tickets found.</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default TicketPage;\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst TicketPage = () => {\n  const { id } = useParams();\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        // Fetch tickets for the specific domain\n        const response = await fetch(`/api/tickets/${id}`); // Adjust URL as needed\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setTickets(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTickets();\n  }, [id]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      <h1>Tickets for Domain: {id}</h1>\n      <ul>\n        {tickets.map((ticket) => (\n          <li key={ticket._id}>\n            <h2>{ticket.title}</h2>\n            <p>{ticket.description}</p>\n            <p>Severity: {ticket.severity}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TicketPage;\n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
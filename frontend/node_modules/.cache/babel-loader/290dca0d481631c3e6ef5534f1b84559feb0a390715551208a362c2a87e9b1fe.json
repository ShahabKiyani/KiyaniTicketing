{"ast":null,"code":"var _jsxFileName = \"/Users/shahab/Desktop/Projects/finalticketingapp/frontend/src/pages/TicketPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./additional-css/TicketPage.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketPage = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/tickets\");\n        setTickets(response.data);\n      } catch (error) {\n        setError(\"Failed to load tickets\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTickets();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"loading\",\n    children: \"Loading tickets...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), tickets.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ticket-list\",\n      children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ticket-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"ticket-title\",\n          children: ticket.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ticket-description\",\n          children: ticket.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ticket-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ticket-severity\",\n            children: [\"Severity: \", ticket.severity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ticket-date\",\n            children: [\"Created at: \", new Date(ticket.createdAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, ticket._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tickets found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketPage, \"8RaUHPAPmOWpaZp4hASiN7Ep6XU=\");\n_c = TicketPage;\nexport default TicketPage;\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst TicketPage = () => {\n  const { id } = useParams();\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        // Fetch tickets for the specific domain\n        const response = await fetch(`/api/tickets/${id}`); // Adjust URL as needed\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setTickets(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTickets();\n  }, [id]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      <h1>Tickets for Domain: {id}</h1>\n      <ul>\n        {tickets.map((ticket) => (\n          <li key={ticket._id}>\n            <h2>{ticket.title}</h2>\n            <p>{ticket.description}</p>\n            <p>Severity: {ticket.severity}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TicketPage;\n*/\nvar _c;\n$RefreshReg$(_c, \"TicketPage\");","map":{"version":3,"names":["useEffect","useState","axios","Link","jsxDEV","_jsxDEV","TicketPage","_s","tickets","setTickets","loading","setLoading","error","setError","fetchTickets","response","get","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ticket","title","description","severity","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["/Users/shahab/Desktop/Projects/finalticketingapp/frontend/src/pages/TicketPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./additional-css/TicketPage.css\";\nimport { Link } from \"react-router-dom\";\n\nconst TicketPage = () => {\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/tickets\");\n        setTickets(response.data);\n      } catch (error) {\n        setError(\"Failed to load tickets\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTickets();\n  }, []);\n\n  if (loading) return <p className=\"loading\">Loading tickets...</p>;\n  if (error) return <p className=\"error\">{error}</p>;\n\n  return (\n    <div className=\"ticket-page\">\n      <h1>All Tickets</h1>\n      {tickets.length > 0 ? (\n        <ul className=\"ticket-list\">\n          {tickets.map((ticket) => (\n            <li key={ticket._id} className=\"ticket-item\">\n              <h2 className=\"ticket-title\">{ticket.title}</h2>\n              <p className=\"ticket-description\">{ticket.description}</p>\n              <div className=\"ticket-details\">\n                <span className=\"ticket-severity\">\n                  Severity: {ticket.severity}\n                </span>\n                <span className=\"ticket-date\">\n                  Created at: {new Date(ticket.createdAt).toLocaleString()}\n                </span>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No tickets found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default TicketPage;\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst TicketPage = () => {\n  const { id } = useParams();\n  const [tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        // Fetch tickets for the specific domain\n        const response = await fetch(`/api/tickets/${id}`); // Adjust URL as needed\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setTickets(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTickets();\n  }, [id]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      <h1>Tickets for Domain: {id}</h1>\n      <ul>\n        {tickets.map((ticket) => (\n          <li key={ticket._id}>\n            <h2>{ticket.title}</h2>\n            <p>{ticket.description}</p>\n            <p>Severity: {ticket.severity}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TicketPage;\n*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}